version: '3.8'

services:
  ledger-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: pocket-ledger-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - JAVA_OPTS=-Xmx1g -Xms512m -XX:+UseG1GC -XX:+UseStringDeduplication
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=when_authorized
      - LOGGING_LEVEL_POCKET_LEDGER=INFO
      - LOGGING_LEVEL_ROOT=WARN
    volumes:
      - ledger-logs:/app/logs
      - ledger-data:/app/data
    networks:
      - ledger-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Optional: Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: pocket-ledger-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ledger-logs:/var/log/nginx
    networks:
      - ledger-network
    depends_on:
      - ledger-api
    restart: always
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    profiles:
      - proxy

networks:
  ledger-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  ledger-logs:
    driver: local
  ledger-data:
    driver: local